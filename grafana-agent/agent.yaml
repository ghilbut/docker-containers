## https://grafana.com/docs/agent/latest/static/configuration/

server:
  log_level: info

metrics:
  global:
    scrape_interval: 10s
    remote_write:
      - url: http://mimir:9009/api/v1/push
        send_exemplars: true
  wal_directory: /tmp/agent/metrics/wal
  configs:
    - name: mimir
      scrape_configs:
        - job_name: 'mimir'
          static_configs:
            - targets: ['mimir:9009']
              labels:
                service: 'mimir'
                group: 'infrastructure'
        - job_name: 'loki'
          static_configs:
            - targets: ['loki:3100']
              labels:
                service: 'loki'
                group: 'infrastructure'
        - job_name: 'tempo'
          static_configs:
            - targets: ['tempo:3200']
              labels:
                service: 'tempo'
                group: 'infrastructure'
        - job_name: 'pyroscope'
          static_configs:
            - targets: [ 'pyroscope:4040' ]
              labels:
                service: 'pyroscope'
                group: 'infrastructure'
        - job_name: 'grafana'
          static_configs:
            - targets: ['grafana:3000']
              labels:
                service: 'grafana'
                group: 'infrastructure'

logs:
  positions_directory: /tmp/agent/logs/positions
  global:
    clients:
      - url: http://loki:3100/loki/api/v1/push
        external_labels:
          job: agent
  configs:
    - name: docker
      scrape_configs:
        - job_name: docker
          docker_sd_configs:
            - host: unix:///var/run/docker.sock
              refresh_interval: 10s
          relabel_configs:
            - source_labels: [ '__meta_docker_container_id' ]
              regex: '(.{7})(.*)'
              target_label: 'container_id'
            - source_labels: [ '__meta_docker_container_name' ]
              regex: '/(.*)'
              target_label: 'container_name'
            - source_labels: [ '__meta_docker_container_log_stream' ]
              target_label: 'stream'
            - regex: '^__meta_docker_container_label_com_(docker_compose_(oneoff|project|service))$'
              replacement: '$1'
              action: labelmap
          pipeline_stages:
            - docker: {}
            - static_labels:
                job: integrations/docker

integrations:
  agent:
    enabled: true
  cadvisor:
    enabled: true
    docker_only: true
    metric_relabel_configs:
      - target_label: job
        replacement: integrations/docker
        action: replace
      - source_labels: [ id ]
        target_label: container_id
        regex: ^/docker/(.{7})(.*)$
        replacement: $1
        action: replace
      - source_labels: [ name ]
        target_label: container_name
        action: replace
      - regex: ^(cpu|id|name)$
        action: labeldrop
      - regex: ^container_label_com_(docker_compose_(oneoff|project|service))$
        replacement: $1
        action: labelmap
      - regex: ^container_label_(.*)$
        action: labeldrop
